from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report
from sklearn.pipeline import make_pipeline

# Data latihan (dummy)
emails = [
    ("Tawaran Spesial", "spam"),
    ("Pertanyaan Produk Baru", "not_spam"),
    ("Diskon Eksklusif Hari Ini", "spam"),
    ("Rencana Pertemuan Besok", "not_spam"),
    # Tambahkan lebih banyak data latihan sesuai kebutuhan
]

# Pisahkan data menjadi fitur (X) dan label (y)
X, y = zip(*emails)

# Bagi data menjadi data latihan dan data uji
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Buat pipeline dengan model Naive Bayes
model = make_pipeline(CountVectorizer(), MultinomialNB())

# Latih model
model.fit(X_train, y_train)

# Prediksi pada data uji
predictions = model.predict(X_test)

# Evaluasi model
print("Accuracy:", accuracy_score(y_test, predictions))
print("\nClassification Report:\n", classification_report(y_test, predictions))

# Contoh penggunaan model untuk klasifikasi email baru
new_email = ["Promo Terbaru Bulan Ini"]
prediction_new_email = model.predict(new_email)
print("\nKlasifikasi Email Baru:", prediction_new_email[0])
